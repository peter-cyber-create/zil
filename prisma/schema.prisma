datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?
  accounts      Account[]
  sessions      Session[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationToken {
  id         String   @id @default(cuid())
  identifier String
  token      String
  expires    DateTime

  @@unique([identifier, token])
}

model Contact {
  id        String   @id @default(cuid())
  name      String
  email     String
  message   String
  responded Boolean  @default(false)
  response  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Quotation {
  id        String   @id @default(cuid())
  name      String
  email     String
  phone     String?
  company   String?
  service   String?
  details   String?
  responded Boolean  @default(false)
  response  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Feedback {
  id        String   @id @default(cuid())
  name      String
  email     String
  message   String
  rating    Int?
  responded Boolean  @default(false)
  response  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
